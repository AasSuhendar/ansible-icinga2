---
- name: Fail if Operating System is not Supported
  fail:
    msg: "Minimum Operating System Version Centos 7 - Get {{ ansible_distribution }} with {{ansible_distribution_major_version}}"
  when:
    - ansible_distribution != 'CentOS'
    - ansible_distribution_major_version | int >= 7

- name: Fail if Required Variable is not defined
  fail:
    msg: "Variable {{ item }} should be defined"
  when:
    - item is not defined or item == ""
  with_items:
    - zfs_dataset_size

- name: Get Service Init Status
  stat:
    path: /sbin/init
  register: service_init_status

- name: Get ZFS Block Device Status
  stat:
    path: "/dev/{{ zfs_block_device }}"
  register: zfs_block_status
  when:
    - zfs_block_device is defined

- name: Get ZFS Block Device Info
  parted:
    device: "/dev/{{ zfs_block_device }}"
    unit: MiB
  register: zfs_block_info
  when:
    - zfs_block_device is defined
    - zfs_block_status.stat.exists

- name: Set Host Facts
  set_fact:
    # icinga_ip: "{{ galera_ip | default(default_value, true) }}"
    mariadb_admin_password: "{{ mariadb_admin_password | default(default_value, true) }}"
    zfs_backend: "{{ zfs_backend if zfs_block_device is defined else 'false' | default(default_value, true) }}"
    zfs_pool_name: "{{ zfs_pool_name | default(default_value, true) }}"
    zfs_dataset_wipe: "{{ zfs_dataset_wipe | default(default_value, true) }}"
    zfs_pool_wipe: "{{ zfs_pool_wipe | default(default_value, true) }}"
    zfs_block_wipe: "{{ zfs_block_wipe if zfs_block_device is defined else 'false' | default(default_value, true) }}"

- name: Make Sure ZFS Backend not Enabled if ZFS Block Device not Exist
  set_fact:
    zfs_backend: 'false'
  when:
    - zfs_backend
    - not zfs_block_status.stat.exists
